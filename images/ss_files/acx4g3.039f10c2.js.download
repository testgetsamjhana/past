(this.$WP=this.$WP||[]).push(["acx4g3",(t,e)=>{"use strict";var o,i,s,r,n,h,l,a,c,d,p=t=>{if(!window||!t)return null;var e=window;return e.ta||(e.ta={}),t.split(".").forEach((t=>{e[t]||(e[t]={}),e=e[t]})),e};return[()=>{t("CircleOverlay",i=class{constructor(t){this.position=void 0,this.radius=void 0,this.opacity=void 0,this.fillColor=void 0,this.strokeColor=void 0,this.strokeWidth=void 0,this.position=t.position,this.radius=t.radius,this.opacity=t.opacity,this.fillColor=t.fillColor,this.strokeColor=t.strokeColor,this.strokeWidth=t.strokeWidth}setPosition(t){this.position=t}setRadius(t){this.radius=t}setOpacity(t){this.opacity=t}setFillColor(t){this.fillColor=t}setStrokeColor(t){this.strokeColor=t}setStrokeWidth(t){this.strokeWidth=t}}),t("PolygonOverlay",s=class t{constructor(e){this.coords=void 0,this.opacity=void 0,this.fillColor=void 0,this.strokeColor=void 0,this.strokeWidth=void 0,this.strokeOpacity=void 0,this.onMouseOver=void 0,this.onMouseOut=void 0,this.onClick=void 0,null!=e.geoJson?this.coords=t.getCoordsFromGeoJson(e.geoJson):this.coords=e.coords,this.opacity=e.opacity,this.fillColor=e.fillColor,this.strokeColor=e.strokeColor,this.strokeWidth=e.strokeWidth,this.strokeOpacity=e.strokeOpacity,this.onClick=e.onClick,this.onMouseOver=e.onMouseOver,this.onMouseOut=e.onMouseOut}static getCoordsFromGeoJson(t){if(null!=t){var e=JSON.parse(t);if(e&&"Polygon"===e.type&&e.coordinates)return e.coordinates[0].map((t=>new o(t[1],t[0])))}return[]}setPolygon(t){this.coords=t}setOpacity(t){this.opacity=t}setFillColor(t){this.fillColor=t}setStrokeColor(t){this.strokeColor=t}setStrokeOpacity(t){this.strokeOpacity=t}setStrokeWidth(t){this.strokeWidth=t}setOnClickInteraction(t){this.onClick=t}setOnMouseOverInteraction(t){this.onMouseOver=t}setOnMouseOutInteraction(t){this.onMouseOut=t}}),t("PolylineOverlay",r=class{constructor(t){this.coords=void 0,this.opacity=void 0,this.color=void 0,this.width=void 0,this.onMouseOver=void 0,this.onMouseOut=void 0,this.onClick=void 0,this.coords=t.coords,this.opacity=t.opacity,this.color=t.color,this.width=t.width,this.onClick=t.onClick,this.onMouseOver=t.onMouseOver,this.onMouseOut=t.onMouseOut}setPolyline(t){this.coords=t}setOpacity(t){this.opacity=t}setColor(t){this.color=t}setWidth(t){this.width=t}setOnClickInteraction(t){this.onClick=t}setOnMouseOverInteraction(t){this.onMouseOver=t}setOnMouseOutInteraction(t){this.onMouseOut=t}}),a={createNs(t,e,o){var i=p(e);return!!i&&(i[o]=t,!0)},getData(t,e){var o=p(t);return o?o[e]:null}},t("MapFactory$1",n=class{constructor(t){this.interfaceClass=void 0,this.interfaceClass=t}loadLibrary(t,e){return!!this.isLibraryLoaded()&&(e(),!0)}isLibraryLoaded(){return!1}getInterfaceClass(){return this.interfaceClass}}),c=n,t("MapMarkerContainer",h=class{constructor(){this.position=void 0,this.pinContainer=void 0,this.zIndexOffset=0,this.onMarkerReady=null,this.draggable=!1,this.onDrag=null,this.position=new o(0,0),this.pinContainer=document.createElement("div"),this.pinContainer.style.position="absolute",this.pinContainer.style.width="0px",this.pinContainer.style.height="0px",this.pinContainer.style.cursor="pointer",this.draggable=!1}removeFromMap(){}setPosition(t){this.position=t}getPosition(){return this.position}setDraggable(t){this.draggable=t}getDraggable(){return this.draggable}getContainer(){return this.pinContainer.parentElement?this.pinContainer:null}setMarkerReadyCallback(t){this.onMarkerReady=t}setDragCallback(t){this.onDrag=t}setZIndexOffset(t){this.zIndexOffset=t}}),d=class{constructor(){this.events={}}on(t,e){return this.events[t]||(this.events[t]=[]),this.events[t].push({callback:e,single:!1}),this}once(t,e){return this.events[t]||(this.events[t]=[]),this.events[t].push({callback:e,single:!0}),this}off(t,e){return this.events[t]&&(this.events[t]=e?this.events[t].filter((t=>e&&t.callback!==e)):[]),this}removeAllListeners(t){return t&&this.events[t]?this.events[t]=[]:t||Object.keys(this.events).forEach((t=>{this.events[t]=[]})),this}emit(t,...e){return this.events[t]&&(this.events[t]=this.events[t].filter((t=>{if(t.callback)try{t.callback.apply(this,e)}catch(t){}return!t.single}))),this}},t("MapInterface",l=class{constructor(t,e){this.events=new d,this.padding={left:32,right:32,top:32,bottom:32},this.getZoom=()=>{throw Error("Unimplemented")},this.padding=Object.assign(this.padding,e.padding)}unmount(){}on(t,e){this.events.on(t,e)}once(t,e){this.events.once(t,e)}off(t,e){this.events.off(t,e)}setCenter(t,e,o){throw Error("Unimplemented")}setZoom(t,e){throw Error("Unimplemented")}setBounds(t,e,o){throw Error("Unimplemented")}panIntoView(t,e,o){return this.setCenter(t,void 0,o),!0}getCenter(){throw Error("Unimplemented")}getBounds(){throw Error("Unimplemented")}resize(){throw Error("Unimplemented")}createMarkerContainer(){throw Error("Unimplemented")}removeMarkerContainer(t){throw Error("Unimplemented")}addCircleOverlay(t){throw Error("Unimplemented")}removeCircleOverlay(t){throw Error("Unimplemented")}addPolygonOverlay(t){throw Error("Unimplemented")}removePolygonOverlay(t){throw Error("Unimplemented")}addPolylineOverlay(t){throw Error("Unimplemented")}removePolylineOverlay(t){throw Error("Unimplemented")}showTransitLayer(){throw Error("Unimplemented")}hideTransitLayer(){throw Error("Unimplemented")}}),t({CircleOverlay:i,MapFactory:c,MapInterface:l,MapMarkerContainer:h,NSExporter:a,PolygonOverlay:s,PolylineOverlay:r})},[t=>o=t.LatLng]]},["1jgmez"]]);
